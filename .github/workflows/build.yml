# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Check for any build error

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # begin wyb 30min build once
  check_push_time:
    runs-on: ubuntu-latest

    steps:
    - name: Get Last Two Commit Timestamps
      id: last_two_commits
      run: |
        COMMITS=$(curl -s -H "Authorization: Bearer ${{ secrets.ACTION_NETLIFYDIGITALGARDEN_30MIN_PER_BUILD }}" \
          "https://api.github.com/repos/${{ github.repository }}/commits?per_page=2")
        LATEST_COMMIT_TIME=$(echo "$COMMITS" | jq -r '.[0].commit.author.date' | xargs -I{} date -d {} +%s)
        PREVIOUS_COMMIT_TIME=$(echo "$COMMITS" | jq -r '.[1].commit.author.date' | xargs -I{} date -d {} +%s)
        # echo "::set-output name=latest_commit_timestamp::$LATEST_COMMIT_TIME"
        # echo "::set-output name=previous_commit_timestamp::$PREVIOUS_COMMIT_TIME"
        echo "latest_commit_timestamp=$LATEST_COMMIT_TIME" >> $GITHUB_OUTPUT
        echo "previous_commit_timestamp=$PREVIOUS_COMMIT_TIME" >> $GITHUB_OUTPUT

    - name: Check Push Time
      run: |
        LATEST_COMMIT_TIME=${{ steps.last_two_commits.outputs.latest_commit_timestamp }}
        PREVIOUS_COMMIT_TIME=${{ steps.last_two_commits.outputs.previous_commit_timestamp }}
        ELAPSED_TIME=$((LATEST_COMMIT_TIME - PREVIOUS_COMMIT_TIME))
        echo "Elapsed time since last commit: $ELAPSED_TIME seconds"
        if [ $ELAPSED_TIME -gt 1800 ]; then
          echo "Time elapsed is greater than 30 minutes. Performing action..."
          curl -X POST -d '{}' https://api.netlify.com/build_hooks/65a77015df78f3742a8265b4
        else
          echo "Time elapsed is within 30 minutes. Skipping action."
          exit 1
        fi
  # end wyb 30min build once
  
  build:

    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm run build --if-present
